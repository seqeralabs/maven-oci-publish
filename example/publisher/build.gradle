plugins {
    id 'java'
    id 'maven-publish'
    id 'io.seqera.maven-oci-publish'
}

def getRequiredProperty(String propertyName) {
    def value = project.findProperty(propertyName)
    if (value == null || value.toString().trim().isEmpty()) {
        throw new GradleException("Required property '${propertyName}' is missing. Please set it in gradle.properties or via -P${propertyName}=value")
    }
    return value
}

group = 'io.seqera'
version = '2.0.0'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    withJavadocJar()
}

// Standard Maven publishing configuration
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifactId = 'shared-library'
            
            pom {
                name = 'Shared Library'
                description = 'A shared library published via maven-oci-publish plugin'
                url = 'https://github.com/pditommaso/maven-oci-publish'
                
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                
                developers {
                    developer {
                        id = 'pditommaso'
                        name = 'Paolo Di Tommaso'
                        email = 'paolo.ditommaso@gmail.com'
                    }
                }
            }
        }
    }
}

// OCI publishing configuration for Docker Hub
oci {
    publications {
        maven {
            from components.java
        }
    }
    
    repositories {
        docker {
            url = 'https://public.cr.stage-seqera.io'
            namespace = 'maven'
            credentials {
                username = getRequiredProperty('ociRegistryUsername')
                password = getRequiredProperty('ociRegistryPassword')
            }
        }
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:2.0.7'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}

test {
    useJUnitPlatform()
}
